/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package att;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import util.AdaptadorMySQL;

/**
 *
 * @author javier
 */
public class CrearMarcacionComplementaria extends javax.swing.JFrame implements ClipboardOwner {

    ArrayList marcacionesIndividuales;
    int idRegistracionActual;
    int indiceRegistracionActual;
    String[][] tabla;
    String consulta;
    static ArrayList<String[]> marcaciones;
    static HashMap<Integer, String> entradas;
    static HashMap<Integer, String> salidas;

    static {
        try {
            marcaciones = Lector.leerMarcaciones();

        } catch (Exception e) {

        }

        try {
            entradas = Lector.getEntradas();
        } catch (Exception e) {

        }

        try {
            salidas = Lector.getSalidas();
        } catch (Exception e) {
            salidas = new HashMap<>();
        }
    }

    public void setClipBoard(String texto) {
        StringSelection txt = new StringSelection(texto);

        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(txt, this);
    }

    /**
     * Creates new form CrearMarcacionComplementaria
     */
    public CrearMarcacionComplementaria() {
        initComponents();

        String[][] tablaContenido = new String[10][2];

        for (int i = 0; i < tablaContenido.length; i++) {
            for (int j = 0; j < tablaContenido[0].length; j++) {
                tablaContenido[i][j] = ((i * 2) + j) + "";

            }

        }

        String[] titulos = {"Leida", "Propuesta"};

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
                tablaContenido,
                titulos
        ));
    }

    public CrearMarcacionComplementaria(String marcacion) {
        initComponents();

        String[][] tablaContenido = new String[10][2];

        for (int i = 0; i < tablaContenido.length; i++) {
            for (int j = 0; j < tablaContenido[0].length; j++) {
                tablaContenido[i][j] = ((i * 2) + j) + "";

            }

        }

        String[] titulos = {"Leida", "Propuesta"};

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
                tablaContenido,
                titulos
        ));

        tIdRegistracionActual.setText(marcacion);

        ver();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lLeer = new javax.swing.JLabel();
        bLeer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tCantMarcas = new javax.swing.JTextField();
        bAnterior = new javax.swing.JButton();
        tIdRegistracionActual = new javax.swing.JTextField();
        bSiguiente = new javax.swing.JButton();
        bVer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        taConsultaInsercion = new javax.swing.JTextArea();
        bPrepararConsulta = new javax.swing.JButton();
        bInsertar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taResultado = new javax.swing.JTextArea();
        bSalidaFicticia = new javax.swing.JButton();
        bEntradaFictica = new javax.swing.JButton();
        tHoraSalidaFicticia = new javax.swing.JTextField();
        tHoraEntradaFicticia = new javax.swing.JTextField();
        tHorasCalculadas = new javax.swing.JTextField();
        lHoraTrabajo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        horaSalidaAgente = new javax.swing.JTextField();
        horaEntradaAgente = new javax.swing.JTextField();
        bPredeterminada = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Marcacion Complementaria");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lLeer.setText("Leer Marcaciones");
        getContentPane().add(lLeer, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 30, -1, -1));

        bLeer.setText("Leer");
        bLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLeerActionPerformed(evt);
            }
        });
        getContentPane().add(bLeer, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 26, 69, -1));

        jLabel2.setText("Cant Marcaciones Leidas");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 30, -1, -1));

        tCantMarcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tCantMarcasActionPerformed(evt);
            }
        });
        getContentPane().add(tCantMarcas, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 27, 140, -1));

        bAnterior.setText("Anterior");
        bAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnteriorActionPerformed(evt);
            }
        });
        getContentPane().add(bAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 69, -1, -1));
        getContentPane().add(tIdRegistracionActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 70, 141, -1));

        bSiguiente.setText("Siguiente");
        bSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguienteActionPerformed(evt);
            }
        });
        getContentPane().add(bSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 69, -1, -1));

        bVer.setText("Ver");
        bVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVerActionPerformed(evt);
            }
        });
        getContentPane().add(bVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 69, -1, -1));

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblTabla.setRowHeight(25);
        jScrollPane2.setViewportView(tblTabla);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 226, -1, 275));

        taConsultaInsercion.setColumns(20);
        taConsultaInsercion.setLineWrap(true);
        taConsultaInsercion.setRows(5);
        taConsultaInsercion.setMargin(new java.awt.Insets(3, 3, 3, 3));
        jScrollPane1.setViewportView(taConsultaInsercion);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 240, 368, 113));

        bPrepararConsulta.setText("Preparar Consulta");
        bPrepararConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrepararConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(bPrepararConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 470, 174, -1));

        bInsertar.setText("Insertar");
        bInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertarActionPerformed(evt);
            }
        });
        getContentPane().add(bInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(737, 470, 161, -1));

        taResultado.setColumns(20);
        taResultado.setLineWrap(true);
        taResultado.setRows(5);
        jScrollPane3.setViewportView(taResultado);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 360, 368, -1));

        bSalidaFicticia.setText("Crear Salida Ficticia");
        bSalidaFicticia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalidaFicticiaActionPerformed(evt);
            }
        });
        getContentPane().add(bSalidaFicticia, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 156, 166, -1));

        bEntradaFictica.setText("Crear Entrada Ficticia");
        bEntradaFictica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEntradaFicticaActionPerformed(evt);
            }
        });
        getContentPane().add(bEntradaFictica, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 188, 166, -1));

        tHoraSalidaFicticia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tHoraSalidaFicticia.setText("23:59:00");
        tHoraSalidaFicticia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHoraSalidaFicticiaActionPerformed(evt);
            }
        });
        getContentPane().add(tHoraSalidaFicticia, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 157, 146, -1));

        tHoraEntradaFicticia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tHoraEntradaFicticia.setText("00:00:00");
        getContentPane().add(tHoraEntradaFicticia, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 189, 146, -1));
        getContentPane().add(tHorasCalculadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 126, 146, -1));

        lHoraTrabajo.setText("Horas de Trabajo Calculadas: ");
        getContentPane().add(lHoraTrabajo, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 129, -1, -1));

        jButton2.setText("12:00");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("05:00");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("13:00");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("06:00");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("14:00");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("07:00");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setText("23:59");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("00:00");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 125, -1, -1));

        horaSalidaAgente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        horaSalidaAgente.setText("14:00:00");
        getContentPane().add(horaSalidaAgente, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 157, 123, -1));

        horaEntradaAgente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        horaEntradaAgente.setText("07:00:00");
        getContentPane().add(horaEntradaAgente, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 189, 123, -1));

        bPredeterminada.setText("Predeterminada");
        bPredeterminada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPredeterminadaActionPerformed(evt);
            }
        });
        getContentPane().add(bPredeterminada, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 125, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tCantMarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCantMarcasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tCantMarcasActionPerformed

    private void bLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLeerActionPerformed
        // TODO add your handling code here:

        try {
            System.err.println("Empezamos a leer");
            marcacionesIndividuales = Lector.getMarcacionesIndividuales_();
            
            //JOptionPane.showMessageDialog(null, marcacionesIndividuales);
            System.err.println(marcacionesIndividuales  );

            indiceRegistracionActual = 0;

            try {
                marcaciones = Lector.leerMarcaciones();

            } catch (Exception e) {

            }

        } catch (Exception e) {
            //  System.out.println("Excepction:      " + e);
            e.printStackTrace();
        }

        tCantMarcas.setText(marcacionesIndividuales.size() + "");

        try {
            tIdRegistracionActual.setText(marcacionesIndividuales.get(indiceRegistracionActual) + "");
        } catch (Exception e) {
            tIdRegistracionActual.setText("No hay!!!");
        }

    }//GEN-LAST:event_bLeerActionPerformed

    private void bAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnteriorActionPerformed
        // TODO add your handling code here:

        if (indiceRegistracionActual > 0) {
            indiceRegistracionActual--;
            tIdRegistracionActual.setText(marcacionesIndividuales.get(indiceRegistracionActual) + "");
        } else {
            tIdRegistracionActual.setText(marcacionesIndividuales.get(0) + "");
        }

        ver();
    }//GEN-LAST:event_bAnteriorActionPerformed

    private void bSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguienteActionPerformed

        siguiente();
    }//GEN-LAST:event_bSiguienteActionPerformed

    private void ver() {
        try {

            String id = tIdRegistracionActual.getText();

            String[] leida = new String[10];

            //    System.err.println("Marcaciones.size: " + marcaciones.size() + "!!!!!!!!!!!!");
            for (int i = 0; i < marcaciones.size(); i++) {

                if ((marcaciones.get(i)[0]).equals(id)) {
                    leida = marcaciones.get(i);
                    System.err.println("Leyendo: " + leida);
                    break;
                }

            }

            /* tIdRegis.setText(leida[0]);
             tLegajoRegis.setText(leida[1]);
             tAgenteRegis.setText(leida[2]);
             tTarjetaRegis.setText(leida[3]);
             tFechaRegis.setText(leida[4]);
             tHoraRegis.setText(leida[5]);
             tRelojRegis.setText(leida[6]);
             tCodigoRegis.setText(leida[7]);
             tFechaProcesoRegis.setText(leida[8]);
             tTipoRegis.setText(leida[9]);

             tIdProp.setText((new Integer(leida[0]) + 100000) + "");
             tLegajoProp.setText(leida[1]);
             tAgenteProp.setText(leida[2]);
             tTarjetaProp.setText(leida[3]);
             tFechaProp.setText(leida[4]);
             tHoraProp.setText(leida[5]);
             tRelojProp.setText(leida[6]);
             //     System.out.println(tCodigoRegis.getText());
             if (tCodigoRegis.getText().equals("20")) //tCodigoProp.setText(leida[7]);
             {

             tCodigoProp.setText("21");

             //                this.update(null);
             } else {
             tCodigoProp.setText("20");
             }

             tFechaProcesoProp.setText(leida[8]);
             tTipoProp.setText("2");*/
            this.tabla = new String[10][2];

            for (int i = 0; i < 10; i++) //for (int j = 0; j < 1; j++) {
            {
                tabla[i][0] = leida[i];
            }

            //}
            //tabla[0][1] = (new Integer(leida[0]) + 100000) + "";
            tabla[0][1] = (leida[0] + (int) (Math.random() * 100)) + "";

            for (int i = 1; i < 9; i++) {
                tabla[i][1] = leida[i];
            }

            if (tabla[7][1].equals("20")) //tCodigoProp.setText(leida[7]);
            {
                tabla[7][1] = "21";
                //tCodigoProp.setText("21");

//                this.update(null);
            } else {

                tabla[7][1] = "20";
            }

            tabla[9][1] = "2";

            for (String[] tabla1 : tabla) {
                for (String item : tabla[0]) {
                    //     System.out.println(tabla[i][j]);
                }
            }
            String[] titulos = {"Leida", "Propuesta"};

            tblTabla.setModel(new javax.swing.table.DefaultTableModel(
                    tabla,
                    titulos
            ));

            int tarjeta = new Integer(leida[3]);
            System.out.println(tarjeta);
            this.horaEntradaAgente.setText(entradas.get(tarjeta));
            this.horaSalidaAgente.setText(salidas.get(tarjeta));

            tHoraEntradaFicticia.setText(horaEntradaAgente.getText());
            tHoraSalidaFicticia.setText(horaSalidaAgente.getText());

            SwingUtilities.updateComponentTreeUI(tblTabla);

        } catch (Exception e) {
            System.err.println("error leyendo: " + e);
            e.printStackTrace();;
        }

    }

    private void siguiente() {
        // TODO add your handling code here:
        if (indiceRegistracionActual < marcacionesIndividuales.size() - 1) {
            indiceRegistracionActual++;
            tIdRegistracionActual.setText(marcacionesIndividuales.get(indiceRegistracionActual) + "");
        } else {
            tIdRegistracionActual.setText(marcacionesIndividuales.get(marcacionesIndividuales.size() - 1) + "");
        }

        ver();
    }

    private void bVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVerActionPerformed
        // TODO add your handling code here:

        ver();
    }//GEN-LAST:event_bVerActionPerformed

    private void bInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertarActionPerformed
        // TODO add your handling code here:

        insertar();
    }//GEN-LAST:event_bInsertarActionPerformed

    public void insertar() {
        AdaptadorMySQL datos = new AdaptadorMySQL();

        try {
            datos.actualizar(consulta);

            datos.cerrar();

            taResultado.setText("Se ha actualizado la BD!!!");

        } catch (SQLException e) {
            taResultado.setText(e.toString());
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void bPrepararConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrepararConsultaActionPerformed
        // TODO add your handling code here:

        preparar();

    }//GEN-LAST:event_bPrepararConsultaActionPerformed

    public void preparar() {
        taResultado.setText("Insertar....");

        TableModel tablaM = tblTabla.getModel();

        consulta = "INSERT INTO " + Lector.TABLA_MARCACIONES + " values(";
        consulta += tablaM.getValueAt(0, 1) + ", ";
        consulta += tablaM.getValueAt(1, 1) + ", '";
        consulta += tablaM.getValueAt(2, 1) + "', ";
        consulta += tablaM.getValueAt(3, 1) + ", '";
        consulta += tablaM.getValueAt(4, 1) + " 00:00:00', '";
        consulta += "1899-12-30 " + tablaM.getValueAt(5, 1) + "', ";
        consulta += tablaM.getValueAt(6, 1) + ", ";
        consulta += tablaM.getValueAt(7, 1) + ", '";
        consulta += tablaM.getValueAt(8, 1) + " 00:00:00', ";
        consulta += tablaM.getValueAt(9, 1) + "); ";

        Hora hora1 = new Hora(tablaM.getValueAt(5, 0).toString());
        Hora hora2 = new Hora(tablaM.getValueAt(5, 1).toString());

        int tiempo = Hora.difHoras(hora2, hora1);

        System.out.println("codigo: " + tablaM.getValueAt(5, 1).toString());

        if (tablaM.getValueAt(7, 1).toString().equals("20")) {
            tiempo *= -1;
        }

        tHorasCalculadas.setText(new Hora(tiempo).toString());

        if (tiempo < 0) {
            tHorasCalculadas.setCaretColor(Color.red);
        }

        //new Hora
        taConsultaInsercion.setText(consulta);
    }

    private void bSalidaFicticiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalidaFicticiaActionPerformed
        // TODO add your handling code here:

        TableModel tablaM = tblTabla.getModel();

        if (tablaM.getValueAt(7, 1).toString().equals("21")) {
            // JOptionPane.showMessageDialog(null, "Ya existe salida!!!");
            //  return;
        }

        tablaM.setValueAt("21", 7, 1);

        tablaM.setValueAt(tHoraSalidaFicticia.getText(), 5, 1);


    }//GEN-LAST:event_bSalidaFicticiaActionPerformed

    private void bEntradaFicticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEntradaFicticaActionPerformed
        // TODO add your handling code here:

        TableModel tablaM = tblTabla.getModel();

        if (tablaM.getValueAt(7, 1).toString().equals("20")) {
            // JOptionPane.showMessageDialog(null, "Ya existe entrada!!!");
            //return;
        }

        tablaM.setValueAt("20", 7, 1);

        tablaM.setValueAt(tHoraEntradaFicticia.getText(), 5, 1);

    }//GEN-LAST:event_bEntradaFicticaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        tHoraSalidaFicticia.setText("13:00:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraSalidaFicticia.getText(), 5, 1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        tHoraEntradaFicticia.setText("06:00:00");          // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraEntradaFicticia.getText(), 5, 1);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        tHoraSalidaFicticia.setText("12:00:00");
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraSalidaFicticia.getText(), 5, 1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        tHoraSalidaFicticia.setText("14:00:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraSalidaFicticia.getText(), 5, 1);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        tHoraEntradaFicticia.setText("05:00:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraEntradaFicticia.getText(), 5, 1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        tHoraEntradaFicticia.setText("07:00:00");          // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraEntradaFicticia.getText(), 5, 1);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        tHoraSalidaFicticia.setText("23:59:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraSalidaFicticia.getText(), 5, 1);
        preparar();
        insertar();
        siguiente();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        tHoraEntradaFicticia.setText("00:00:00");          // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(tHoraEntradaFicticia.getText(), 5, 1);
        preparar();
        insertar();
        siguiente();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void tHoraSalidaFicticiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHoraSalidaFicticiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tHoraSalidaFicticiaActionPerformed

    private void bPredeterminadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPredeterminadaActionPerformed
        // TODO add your handling code here:
        TableModel tabla = tblTabla.getModel();

        int tarjeta = new Integer(tabla.getValueAt(3, 0).toString());

        tHoraEntradaFicticia.setText(horaEntradaAgente.getText());
        tHoraSalidaFicticia.setText(horaSalidaAgente.getText());

        System.err.println(tblTabla.getModel().getValueAt(7, 0));

        if (tabla.getValueAt(7, 0).toString().equals("20")) {
            tabla.setValueAt(salidas.get(tarjeta), 5, 1);
        }

        if (tabla.getValueAt(7, 0).toString().equals("21")) {
            tabla.setValueAt(entradas.get(tarjeta), 5, 1);
        }

        preparar();
        insertar();
        siguiente();
    }//GEN-LAST:event_bPredeterminadaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info.getClassName() + ": " + info.getName());
            }
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //   System.out.println(info.getClassName());
                // if ("Nimbus".equals(info.getName())) {
                if ("Windows".equals(info.getName())) {
                    //       if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    System.out.println(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearMarcacionComplementaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAnterior;
    private javax.swing.JButton bEntradaFictica;
    private javax.swing.JButton bInsertar;
    private javax.swing.JButton bLeer;
    private javax.swing.JButton bPredeterminada;
    private javax.swing.JButton bPrepararConsulta;
    private javax.swing.JButton bSalidaFicticia;
    private javax.swing.JButton bSiguiente;
    private javax.swing.JButton bVer;
    private javax.swing.JTextField horaEntradaAgente;
    private javax.swing.JTextField horaSalidaAgente;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lHoraTrabajo;
    private javax.swing.JLabel lLeer;
    private javax.swing.JTextField tCantMarcas;
    private javax.swing.JTextField tHoraEntradaFicticia;
    private javax.swing.JTextField tHoraSalidaFicticia;
    private javax.swing.JTextField tHorasCalculadas;
    private javax.swing.JTextField tIdRegistracionActual;
    private javax.swing.JTextArea taConsultaInsercion;
    private javax.swing.JTextArea taResultado;
    private javax.swing.JTable tblTabla;
    // End of variables declaration//GEN-END:variables

    @Override
    public void lostOwnership(Clipboard clipboard, Transferable contents) {

        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
