/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package att;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.FileChooserUI;
import util.AdaptadorMySQL;
import util.Fecha;
import util.Globals;
import util.MySQLAdapter;

/**
 *
 * @author RRHH-SERVER
 */
public class MainGUI extends javax.swing.JFrame {

    private static String lastSelectedDirectory = ".";

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();

        bCrearTables.setVisible(false);

        try {
            AdaptadorMySQL datos = new AdaptadorMySQL();

            datos.consultar("select path from ultimo_directorio order by id desc");

            datos.resultados.next();

            lastSelectedDirectory = datos.resultados.getString("path");

            tRutaArchivo.setText(lastSelectedDirectory + "\\ATT2000.MDB");

            datos.cerrar();

        } catch (Exception e) {
            System.err.println(e);
        }

        try {

        } catch (Exception e) {

        }
    }

     /**
     * Verifies the existence of tables for the given month and year.
     *
     * @param month The month for which tables are to be checked.
     * @param year  The year for which tables are to be checked.
     * @return A HashMap containing table names as keys and their existence status as values.
     */
    
    public static HashMap<String, Boolean> verifyTables(int month, int year) {
        HashMap<String, Boolean> output = new HashMap<>();

        String tableAttendance = "attendance_" + Globals.MONTH_ABBREV[month - 1] + "_" + year;
        String tableDetail = "overtime_detail_" + Globals.MONTH_ABBREV[month - 1] + "_" + year;
        String tableOvertimeHours = "overtime_hours_" + Globals.MONTH_ABBREV[month - 1] + "_" + year;

        output.put(tableAttendance, searchTable(tableAttendance));
        output.put(tableDetail, searchTable(tableDetail));
        output.put(tableOvertimeHours, searchTable(tableOvertimeHours));

        return output;
    }

    /**
     * Searches for the existence of the table @tableName in the schema.
     *
     * @param tableName The name of the table to search for.
     * @return true if found, false otherwise.
     */
    public static boolean searchTable(String tableName) {
        try {
            MySQLAdapter data = new MySQLAdapter();

            String query = """
                       SELECT COUNT(*)
                       FROM information_schema.tables
                       WHERE table_schema = '%s'
                       AND table_name = '%s';
                       """.formatted(Globals.MYSQL_SCHEMA_NAME, tableName);

            data.executeQuery(query);
            data.results.next();

            return data.results.getInt(1) > 0;

        } catch (SQLException e) {
            System.err.println(e);
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tRutaArchivo = new javax.swing.JTextField();
        bLeerAccess = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tMes = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tAnio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMarcas = new javax.swing.JTextArea();
        bCrearTables = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Control de Registraciones y Horas Extras");
        setForeground(new java.awt.Color(153, 153, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Archivo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        getContentPane().add(tRutaArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 380, -1));

        bLeerAccess.setText("Leer");
        bLeerAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLeerAccessActionPerformed(evt);
            }
        });
        getContentPane().add(bLeerAccess, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, -1, -1));

        jLabel2.setText("Mes");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        tMes.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tMes.setText("3");
        getContentPane().add(tMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 80, -1));

        jLabel3.setText("AÃ±o");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        tAnio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tAnio.setText("2024");
        tAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tAnioActionPerformed(evt);
            }
        });
        getContentPane().add(tAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 80, -1));

        taMarcas.setColumns(20);
        taMarcas.setRows(5);
        jScrollPane1.setViewportView(taMarcas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 680, 500));

        bCrearTables.setText("Crear Tablas");
        getContentPane().add(bCrearTables, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        jMenuBar1.setForeground(new java.awt.Color(204, 204, 204));

        jMenu1.setText("Lecturas");

        jMenuItem1.setText("Buscar Archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Crear Marcaciones");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearMarcacion().setVisible(true);
            }
        });
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new java.io.File(lastSelectedDirectory));

        int result = fc.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fc.getSelectedFile();
            tRutaArchivo.setText(selectedFile.getAbsolutePath());
            lastSelectedDirectory = selectedFile.getParent();

            try {
                AdaptadorMySQL datos = new AdaptadorMySQL();

                String consulta = "insert into ultimo_directorio values (0, '" + lastSelectedDirectory.replace("\\", "\\\\") + "')";

                datos.actualizar(consulta);

                datos.cerrar();

            } catch (Exception e) {
                System.err.println(e);
            }

        }

        //tRutaArchivo.setText(fc.getApproveButtonText());
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void tAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tAnioActionPerformed

    private void bLeerAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLeerAccessActionPerformed
        // TODO add your handling code here:
        String URL_ACCESS = "jdbc:ucanaccess://" + tRutaArchivo.getText();

        //JOptionPane.showMessageDialog(null, URL_ACCESS);
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;

        int mes = Integer.parseInt(tMes.getText());
        int anio = Integer.parseInt(tAnio.getText());;

        try {
            // Establish the connection.
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            //con = DriverManager.getConnection("jdbc:ucanaccess://E:\\Users\\Public\\Documents\\RRHH2020\\Sueldos\\Liquidaciones\\2023\\05-Mayo\\ATT2000.MDB");
            con = DriverManager.getConnection(URL_ACCESS);

            // Create and execute an SQL statement that returns some data.
            String SQL = "SELECT ui.badgenumber, checktime, checktype, nombres FROM userinfo ui inner join checkinout ch on ch.userid = ui.userid "
                    + "inner join agentes a on a.tarjeta = ui.badgenumber "
                    + " where month(CHECKTIME) = " + mes + " and year(CHECKTIME) = " + anio + " and activo > 0";

            SQL = "SELECT ui.badgenumber, checktime, checktype FROM userinfo ui inner join checkinout ch on ch.userid = ui.userid "
                    + "  "
                    + " where month(CHECKTIME) = " + mes + " and year(CHECKTIME) = " + anio + " ";

            //System.err.println(SQL);
            stmt = con.createStatement();
            rs = stmt.executeQuery(SQL);
            ArrayList<String> marcas = new ArrayList();
            HashMap<String, String> map = new HashMap<>();

            String[][] array = Agente.getPadronAgentes();

            ArrayList<HashMap<String, String>> arrayList = new ArrayList<>();
            for (String[] row : array) {
                // Create a new HashMap for each row

                map.put(row[0], row[1]);
                //map.put("Value", row[1]);
                // Add the HashMap to the ArrayList
                //arrayList.add(map);
            }

            //System.out.println(map);
            String marcaciones = "";
            ArrayList<Marcacion> marcasList = new ArrayList();

            while (rs.next()) {

                int tarjeta = rs.getInt(1);
                String checktime = rs.getString(2);
                String checktype = rs.getString(3);

                Hora hora = new Hora(checktime.substring(11, 16));

                Fecha fecha = new Fecha().setFechaMySQL(checktime.substring(0, 10));

                int codigo = checktype.equals("I") ? 20 : 21;
                String nombre = map.get(tarjeta + "");

                //marcaciones += tarjeta + "\t " + nombre + "\t " + fecha + "\t " + hora + "\t " + 1 + "\t " + codigo + "\t "+ new Fecha() + "\n";
                Marcacion marca = new Marcacion(tarjeta, nombre, tarjeta, fecha, hora, 1, codigo, new Fecha());
                marcasList.add(marca);
                marcaciones += marca.getConsultaInsert(Integer.parseInt(tMes.getText()), Integer.parseInt(tAnio.getText())) + ";\n";

            }

            taMarcas.setText(marcaciones);

            // Iterate through the data in the result set and display it.
            /*  while (rs.next()) {

                int legajo = rs.getInt(1);
                String fechaHora = rs.getString(2);
                Hora hora = new Hora(fechaHora.substring(11, 16));

                Fecha fecha = new Fecha().setFechaMySQL(fechaHora.substring(0, 10));

                String cod = rs.getString(3);
                String nombre = rs.getString(4);

                int codigo = cod.equals("I") ? 20 : 21;

                String marca = legajo + "\t" + nombre + "\t" + legajo + "\t" + fecha + "\t" + hora + "\t1\t " + codigo + "\t" + new Fecha();

                marcas.add(marca);

                System.out.println(marca);
            }
            System.out.println(marcas.size());*/
        } // Handle any errors that may have occurred.
        catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_bLeerAccessActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCrearTables;
    private javax.swing.JButton bLeerAccess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tAnio;
    private javax.swing.JTextField tMes;
    private javax.swing.JTextField tRutaArchivo;
    private javax.swing.JTextArea taMarcas;
    // End of variables declaration//GEN-END:variables
}
