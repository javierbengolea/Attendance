/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package att;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import util.AdaptadorMySQL;

/**
 *
 * @author javier
 */
public class CrearMarcacionComplementaria2 extends javax.swing.JFrame implements ClipboardOwner {

    ArrayList marcacionesIndividuales;
    int idRegistracionActual;
    int indiceRegistracionActual;
    String[][] tabla;
    String consulta;
    static ArrayList<String[]> marcaciones;
    static HashMap<Integer, String> entradas;
    static HashMap<Integer, String> salidas;

    static {
        try {
            marcaciones = Lector.leerMarcaciones();

        } catch (Exception e) {

        }

        try {
            entradas = Lector.getEntradas();
        } catch (Exception e) {

        }

        try {
            salidas = Lector.getSalidas();
        } catch (Exception e) {
            salidas = new HashMap<>();
        }
    }

    public void setClipBoard(String texto) {
        StringSelection txt = new StringSelection(texto);

        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(txt, this);
    }

    /**
     * Creates new form CrearMarcacionComplementaria
     */
    public CrearMarcacionComplementaria2() {
        initComponents();

        String[][] tablaContenido = new String[5][2];

        for (int i = 0; i < tablaContenido.length; i++) {
            for (int j = 0; j < tablaContenido[0].length; j++) {
                tablaContenido[i][j] = ((i * 2) + j) + "";

            }

        }

        String[] titulos = {"Leida", "Propuesta"};

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
                tablaContenido,
                titulos
        ));
        //this.getContentPane().setPreferredSize(1000, 560);
    }

    public void CrearMarcacionComplementaria(String marcacion) {
        initComponents();

        String[][] tablaContenido = new String[10][2];

        for (int i = 0; i < tablaContenido.length; i++) {
            for (int j = 0; j < tablaContenido[0].length; j++) {
                tablaContenido[i][j] = ((i * 2) + j) + "";

            }

        }

        String[] titulos = {"Leida", "Propuesta"};

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
                tablaContenido,
                titulos
        ));

        tIdRegistracionActual.setText(marcacion);

        ver();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lLeer = new javax.swing.JLabel();
        bLeer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tCantMarcas = new javax.swing.JTextField();
        bAnterior = new javax.swing.JButton();
        tIdRegistracionActual = new javax.swing.JTextField();
        bSiguiente = new javax.swing.JButton();
        bVer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        taConsultaInsercion = new javax.swing.JTextArea();
        bPrepararConsulta = new javax.swing.JButton();
        bInsertar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taResultado = new javax.swing.JTextArea();
        bSalidaFicticia = new javax.swing.JButton();
        bEntradaFictica = new javax.swing.JButton();
        horaSalidaAgente = new javax.swing.JTextField();
        horaEntradaAgente = new javax.swing.JTextField();
        tHorasCalculadas = new javax.swing.JTextField();
        bPredeterminada = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Marcacion Complementaria");
        setPreferredSize(new java.awt.Dimension(515, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lLeer.setText("Leer Marcaciones");
        getContentPane().add(lLeer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        bLeer.setText("Leer");
        bLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLeerActionPerformed(evt);
            }
        });
        getContentPane().add(bLeer, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 69, -1));

        jLabel2.setText("Le√≠das");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 60, -1));

        tCantMarcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tCantMarcasActionPerformed(evt);
            }
        });
        getContentPane().add(tCantMarcas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 80, -1));

        bAnterior.setText("Anterior");
        bAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnteriorActionPerformed(evt);
            }
        });
        getContentPane().add(bAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, -1, -1));
        getContentPane().add(tIdRegistracionActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 120, -1));

        bSiguiente.setText("Siguiente");
        bSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguienteActionPerformed(evt);
            }
        });
        getContentPane().add(bSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 80, -1));

        bVer.setText("Ver");
        bVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVerActionPerformed(evt);
            }
        });
        getContentPane().add(bVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 50, -1));

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblTabla.setRowHeight(25);
        jScrollPane2.setViewportView(tblTabla);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 150));

        taConsultaInsercion.setColumns(20);
        taConsultaInsercion.setLineWrap(true);
        taConsultaInsercion.setRows(5);
        taConsultaInsercion.setMargin(new java.awt.Insets(3, 3, 3, 3));
        jScrollPane1.setViewportView(taConsultaInsercion);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 450, 40));

        bPrepararConsulta.setText("Preparar Consulta");
        bPrepararConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrepararConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(bPrepararConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 174, -1));

        bInsertar.setText("Insertar");
        bInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertarActionPerformed(evt);
            }
        });
        getContentPane().add(bInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, 161, -1));

        taResultado.setColumns(20);
        taResultado.setLineWrap(true);
        taResultado.setRows(5);
        jScrollPane3.setViewportView(taResultado);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 450, 70));

        bSalidaFicticia.setText("Salida");
        bSalidaFicticia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalidaFicticiaActionPerformed(evt);
            }
        });
        getContentPane().add(bSalidaFicticia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 78, -1));

        bEntradaFictica.setText("Entrada");
        bEntradaFictica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEntradaFicticaActionPerformed(evt);
            }
        });
        getContentPane().add(bEntradaFictica, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 78, -1));

        horaSalidaAgente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        horaSalidaAgente.setText("23:59:00");
        horaSalidaAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaSalidaAgenteActionPerformed(evt);
            }
        });
        getContentPane().add(horaSalidaAgente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 78, -1));

        horaEntradaAgente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        horaEntradaAgente.setText("00:00:00");
        getContentPane().add(horaEntradaAgente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 78, -1));
        getContentPane().add(tHorasCalculadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 90, -1));

        bPredeterminada.setText("Predeterminada");
        bPredeterminada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPredeterminadaActionPerformed(evt);
            }
        });
        getContentPane().add(bPredeterminada, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 90, -1));

        jButton2.setText("12:00");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 78, -1));

        jButton3.setText("05:00");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 78, -1));

        jButton4.setText("13:00");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 74, -1));

        jButton5.setText("06:00");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 74, -1));

        jButton7.setText("23:59");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 80, -1));

        jButton9.setText("00:00");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 80, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tCantMarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCantMarcasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tCantMarcasActionPerformed

    private void bLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLeerActionPerformed
        // TODO add your handling code here:

        try {
            System.err.println("Empezamos a leer");
            marcacionesIndividuales = Lector.getMarcacionesIndividuales_();

            //JOptionPane.showMessageDialog(null, marcacionesIndividuales);
            System.err.println(marcacionesIndividuales);

            indiceRegistracionActual = 0;

            try {
                marcaciones = Lector.leerMarcaciones();

            } catch (Exception e) {

            }

        } catch (Exception e) {
            //  System.out.println("Excepction:      " + e);
            e.printStackTrace();
        }

        tCantMarcas.setText(marcacionesIndividuales.size() + "");

        try {
            tIdRegistracionActual.setText(marcacionesIndividuales.get(indiceRegistracionActual) + "");
        } catch (Exception e) {
            tIdRegistracionActual.setText("No hay!!!");
        }

    }//GEN-LAST:event_bLeerActionPerformed

    private void bAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnteriorActionPerformed
        // TODO add your handling code here:

        if (indiceRegistracionActual > 0) {
            indiceRegistracionActual--;
            tIdRegistracionActual.setText(marcacionesIndividuales.get(indiceRegistracionActual) + "");
        } else {
            tIdRegistracionActual.setText(marcacionesIndividuales.get(0) + "");
        }

        ver();
    }//GEN-LAST:event_bAnteriorActionPerformed

    private void bSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguienteActionPerformed

        siguiente();
    }//GEN-LAST:event_bSiguienteActionPerformed

    private void ver() {
        try {

            String id = tIdRegistracionActual.getText();

            String[] leida = new String[10];

            for (int i = 0; i < marcaciones.size(); i++) {

                if ((marcaciones.get(i)[0]).equals(id)) {
                    leida = marcaciones.get(i);
                    //System.err.println("Leyendo: " + leida);
                    break;
                }
            }
            
            for (int i = 0; i < leida.length; i++) {
                System.out.println(leida[i]);
                
            }

            // this.tabla = new String[10][2];
            this.tabla = new String[5][2];

            for (int i = 0; i < tabla.length; i++) {
                for (int j = 0; j < tabla[i].length; j++) {
                    tabla[i][j] = "";

                }

            }

            /*for (int i = 0; i < 10; i++) 
            {
                tabla[i][0] = leida[i];
            }
            tabla[0][1] = (leida[0] + (int) (Math.random() * 100)) + "";
             */
            tabla[0][0] = leida[2];
            tabla[1][0] = leida[3];
            tabla[2][0] = leida[4];
            tabla[3][0] = leida[5];
            tabla[4][0] = leida[7];

            for (int i = 0; i < 5; i++) {
                tabla[i][1] = tabla[i][0];
            }

            /*if (tabla[7][1].equals("20"))
            {
                tabla[7][1] = "21";

            } else {

                tabla[7][1] = "20";
            }*/
            if (tabla[4][1].equals("20")) {
                tabla[4][1] = "21";

            } else {

                tabla[4][1] = "20";
            }

            //tabla[9][1] = "2";
            for (String[] tabla1 : tabla) {
                for (String item : tabla[0]) {
                    //     System.out.println(tabla[i][j]);
                }
            }
            String[] titulos = {"Leida", "Propuesta"};

            tblTabla.setModel(new javax.swing.table.DefaultTableModel(
                    tabla,
                    titulos
            ));

            int tarjeta = new Integer(leida[3]);
            System.out.println(tarjeta);
            this.horaEntradaAgente.setText(entradas.get(tarjeta));
            this.horaSalidaAgente.setText(salidas.get(tarjeta));

            horaEntradaAgente.setText(horaEntradaAgente.getText());
            horaSalidaAgente.setText(horaSalidaAgente.getText());

            SwingUtilities.updateComponentTreeUI(tblTabla);

        } catch (Exception e) {
            System.err.println("error leyendo: " + e);
            e.printStackTrace();;
        }

    }

    private void siguiente() {
        // TODO add your handling code here:
        if (indiceRegistracionActual < marcacionesIndividuales.size() - 1) {
            indiceRegistracionActual++;
            tIdRegistracionActual.setText(marcacionesIndividuales.get(indiceRegistracionActual) + "");
        } else {
            tIdRegistracionActual.setText(marcacionesIndividuales.get(marcacionesIndividuales.size() - 1) + "");
        }

        ver();
    }

    private void bVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVerActionPerformed
        // TODO add your handling code here:

        ver();
    }//GEN-LAST:event_bVerActionPerformed

    private void bInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertarActionPerformed
        // TODO add your handling code here:

        insertar();
    }//GEN-LAST:event_bInsertarActionPerformed

    public void insertar() {
        AdaptadorMySQL datos = new AdaptadorMySQL();

        try {
            datos.actualizar(consulta);

            datos.cerrar();

            taResultado.setText("Se ha actualizado la BD!!!");

        } catch (SQLException e) {
            taResultado.setText(e.toString());
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void bPrepararConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrepararConsultaActionPerformed
        // TODO add your handling code here:

        preparar();

    }//GEN-LAST:event_bPrepararConsultaActionPerformed

    public void preparar() {
        taResultado.setText("Insertar....");

        TableModel tablaM = tblTabla.getModel();

        consulta = "INSERT INTO " + Lector.TABLA_MARCACIONES + " values(";
        consulta += tablaM.getValueAt(0, 1) + ", ";
        consulta += tablaM.getValueAt(1, 1) + ", '";
        consulta += tablaM.getValueAt(2, 1) + "', ";
        consulta += tablaM.getValueAt(3, 1) + ", '";
        consulta += tablaM.getValueAt(4, 1) + " 00:00:00', '";
        consulta += "1899-12-30 " + tablaM.getValueAt(5, 1) + "', ";
        consulta += tablaM.getValueAt(6, 1) + ", ";
        consulta += tablaM.getValueAt(7, 1) + ", '";
        consulta += tablaM.getValueAt(8, 1) + " 00:00:00', ";
        consulta += tablaM.getValueAt(9, 1) + "); ";

        Hora hora1 = new Hora(tablaM.getValueAt(5, 0).toString());
        Hora hora2 = new Hora(tablaM.getValueAt(5, 1).toString());

        int tiempo = Hora.difHoras(hora2, hora1);

        System.out.println("codigo: " + tablaM.getValueAt(5, 1).toString());

        if (tablaM.getValueAt(7, 1).toString().equals("20")) {
            tiempo *= -1;
        }

        tHorasCalculadas.setText(new Hora(tiempo).toString());

        if (tiempo < 0) {
            tHorasCalculadas.setCaretColor(Color.red);
        }

        //new Hora
        taConsultaInsercion.setText(consulta);
    }

    private void bSalidaFicticiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalidaFicticiaActionPerformed
        // TODO add your handling code here:

        TableModel tablaM = tblTabla.getModel();

        if (tablaM.getValueAt(4, 1).toString().equals("21")) {
            // JOptionPane.showMessageDialog(null, "Ya existe salida!!!");
            //  return;
        }

        tablaM.setValueAt("21", 4, 1);

        tablaM.setValueAt(horaSalidaAgente.getText(), 3, 1);


    }//GEN-LAST:event_bSalidaFicticiaActionPerformed

    private void bEntradaFicticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEntradaFicticaActionPerformed
        // TODO add your handling code here:

        TableModel tablaM = tblTabla.getModel();

        if (tablaM.getValueAt(4, 1).toString().equals("20")) {
            // JOptionPane.showMessageDialog(null, "Ya existe entrada!!!");
            //return;
        }

        tablaM.setValueAt("20", 4, 1);

        tablaM.setValueAt(horaEntradaAgente.getText(), 3, 1);

    }//GEN-LAST:event_bEntradaFicticaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        horaSalidaAgente.setText("13:00:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(horaSalidaAgente.getText(), 5, 1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        horaEntradaAgente.setText("06:00:00");          // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(horaEntradaAgente.getText(), 5, 1);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        horaSalidaAgente.setText("12:00:00");
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(horaSalidaAgente.getText(), 5, 1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        horaEntradaAgente.setText("05:00:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(horaEntradaAgente.getText(), 5, 1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        horaSalidaAgente.setText("23:59:00");        // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(horaSalidaAgente.getText(), 3, 1);
        preparar();
        insertar();
        siguiente();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        horaEntradaAgente.setText("00:00:00");          // TODO add your handling code here:
        TableModel tablaM = tblTabla.getModel();
        tablaM.setValueAt(horaEntradaAgente.getText(), 5, 1);
        preparar();
        insertar();
        siguiente();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void bPredeterminadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPredeterminadaActionPerformed
        // TODO add your handling code here:
        TableModel tabla = tblTabla.getModel();

        int tarjeta = new Integer(tabla.getValueAt(1, 0).toString());

        horaEntradaAgente.setText(horaEntradaAgente.getText());
        horaSalidaAgente.setText(horaSalidaAgente.getText());

        System.err.println(tblTabla.getModel().getValueAt(4, 0));

        if (tabla.getValueAt(4, 0).toString().equals("20")) {
            tabla.setValueAt(salidas.get(tarjeta), 1, 1);
        }

        if (tabla.getValueAt(4, 0).toString().equals("21")) {
            tabla.setValueAt(entradas.get(tarjeta), 1, 1);
        }

        preparar();
        insertar();
        siguiente();
    }//GEN-LAST:event_bPredeterminadaActionPerformed

    private void horaSalidaAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaSalidaAgenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaSalidaAgenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info.getClassName() + ": " + info.getName());
            }
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //   System.out.println(info.getClassName());
                // if ("Nimbus".equals(info.getName())) {
                if ("Windows".equals(info.getName())) {
                    //       if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    System.out.println(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearMarcacionComplementaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearMarcacionComplementaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAnterior;
    private javax.swing.JButton bEntradaFictica;
    private javax.swing.JButton bInsertar;
    private javax.swing.JButton bLeer;
    private javax.swing.JButton bPredeterminada;
    private javax.swing.JButton bPrepararConsulta;
    private javax.swing.JButton bSalidaFicticia;
    private javax.swing.JButton bSiguiente;
    private javax.swing.JButton bVer;
    private javax.swing.JTextField horaEntradaAgente;
    private javax.swing.JTextField horaSalidaAgente;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lLeer;
    private javax.swing.JTextField tCantMarcas;
    private javax.swing.JTextField tHorasCalculadas;
    private javax.swing.JTextField tIdRegistracionActual;
    private javax.swing.JTextArea taConsultaInsercion;
    private javax.swing.JTextArea taResultado;
    private javax.swing.JTable tblTabla;
    // End of variables declaration//GEN-END:variables

    @Override
    public void lostOwnership(Clipboard clipboard, Transferable contents) {

        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
